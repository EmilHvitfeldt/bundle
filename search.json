[{"path":[]},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://rstudio.github.io/bundle/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://rstudio.github.io/bundle/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to bundle","title":"Contributing to bundle","text":"outlines propose change bundle. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://rstudio.github.io/bundle/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to bundle","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://rstudio.github.io/bundle/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to bundle","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://rstudio.github.io/bundle/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to bundle","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"rstudio/bundle\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://rstudio.github.io/bundle/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to bundle","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://rstudio.github.io/bundle/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to bundle","text":"Please note bundle project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://rstudio.github.io/bundle/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 bundle authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rstudio.github.io/bundle/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with bundle","title":"Getting help with bundle","text":"Thanks using bundle! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://rstudio.github.io/bundle/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with bundle","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://rstudio.github.io/bundle/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with bundle","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://rstudio.github.io/bundle/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with bundle","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://rstudio.github.io/bundle/articles/bundle.html","id":"saving-things-is-hard","dir":"Articles","previous_headings":"","what":"Saving things is hard","title":"Getting started with bundle","text":"example, let’s fit model keras package, building neural network models miles per gallon using rest variables built-mtcars dataset. Easy peasy! Now, given model trained, assume ’s ready go predict new data. mental map might look something like :  pass model object predict() function, along new data predict , get predictions back. Let’s try : Perfect. ’re satisfied model think provides valuable insights, might want deploy somewhere—maybe Shiny app—others can make use . callr package helpful emulating kind situation. package allows us start fresh R session pass objects . ’ll just make use two arguments function r(): func: function , given model object new data, generate predictions, args: named list, giving arguments function. example: , approach might : save model object start new R session load model object new session predict new data loaded model object First, saving model object file: Now, starting fresh R session predicting new data: Oof. Hm. bit poking around keras’ documentation, might come across keras vignette “Saving serializing models” vignette(\"saving_serializing\", package = \"keras\"). vignette points us several functions keras package allow us save model fit way allows predict new session. Given new understanding, can update mental map bit. objects require extra information ’re loaded new environments order thing. case, keras model object needs access additional references order predict new data.  computer science, bits “extra information” called references. references need persist—restored—new environments order objects reference work well. kinds custom methods save objects, like ones keras provide, often referred native serialization. Methods native serialization know references need brought along order object effectively thing new environment. Let’s make use native serialization, !","code":"cars <- mtcars %>%   as.matrix() %>%   scale()  x_train <- cars[1:25, 2:ncol(cars)] y_train <- cars[1:25, 1]  x_test <- cars[26:32, 2:ncol(cars)] y_test <- cars[26:32, 1]  keras_fit <-    keras_model_sequential()  %>%   layer_dense(units = 1, input_shape = ncol(x_train), activation = 'linear') %>%   compile(     loss = 'mean_squared_error',     optimizer = optimizer_adam(learning_rate = .01)   )  #> Loaded Tensorflow version 2.4.0  keras_fit %>%   fit(     x = x_train, y = y_train,     epochs = 100, batch_size = 1,     verbose = 0   ) predict(keras_fit, x_test) #>            [,1] #> [1,]  1.5096883 #> [2,]  1.5982280 #> [3,]  1.0843080 #> [4,]  0.5545344 #> [5,] -0.5893033 #> [6,] -1.5952129 #> [7,]  0.9550182 r(   function(x) {     x * 2   },   args = list(     x = 1   ) ) #> [1] 2 temp_file <- tempfile()  saveRDS(keras_fit, file = temp_file) r(   function(temp_file, new_data) {     library(keras)          model_object <- readRDS(file = temp_file)          predict(model_object, new_data)   },   args = list(     temp_file = temp_file,     new_data = x_test   ) ) #> Error: ! error in callr subprocess #> Caused by error in `do.call(object$predict, args)`: #> ! 'what' must be a function or character string"},{"path":"https://rstudio.github.io/bundle/articles/bundle.html","id":"native-serialization-and-where-it-falls-short","dir":"Articles","previous_headings":"","what":"Native serialization, and where it falls short","title":"Getting started with bundle","text":"keras’ vignette really informative telling us —save model native serialization rather saveRDS, ’ll good go. Saving model object methods: Now, starting fresh R session predicting new data: Awesome! Making use methods, able effectively save model, load new R session, predict new data. Now, new scenario—’ve heard xgboost models super performant, want try productionize , . ? Based workflow just now, try just save saveRDS see get informative error somewhere along way predicting new R session. , maybe better approach read documentation see can find anything related serialization. ’ve done work figuring , turns interface little bit different. ’ll need make sure params object persists across sessions, saveRDS work … ah, ’ll stop . just use function R object, just work?","code":"temp_dir <- tempdir() save_model_tf(keras_fit, filepath = temp_dir) r(   function(temp_dir, new_data) {     library(keras)          model_object <- load_model_tf(filepath = temp_dir)          predict(model_object, new_data)   },   args = list(     temp_dir = temp_dir,     new_data = x_test   ) ) #>            [,1] #> [1,]  1.5096883 #> [2,]  1.5982280 #> [3,]  1.0843080 #> [4,]  0.5545344 #> [5,] -0.5893033 #> [6,] -1.5952129 #> [7,]  0.9550182"},{"path":"https://rstudio.github.io/bundle/articles/bundle.html","id":"using-bundle","dir":"Articles","previous_headings":"","what":"Using bundle","title":"Getting started with bundle","text":"bundle provides consistent interface prepare R model objects saved re-loaded. package provides two functions—bundle() unbundle()—take care minutae preparing save load R objects effectively.  Bundles just lists two elements: object: object element bundle serialized version inputted model object. simplest situations modeling, object just output native serialization function like saveRDS.lgb.Booster used earlier. situate(): situate() element bundle function situates object element new environment. takes object element input, also “freezes” reference existed original object created. unbundle() called bundle object, situate() element bundle re-load object element restore needed references new environment. Thus, output unbundle() ready go prediction wherever called. bit concrete, lets return keras example. Bundling model fit: Now, starting fresh R session predicting new data: Huzzah! best part , wanted thing xgboost object, use code! First, fitting quick xgboost model: Now, bundling : Now, starting fresh R session predicting new data: Voilà! hope bundles helpful making modeling deployment workflows good bit smoother future.","code":"keras_bundle <- bundle(keras_fit) r(   function(model_bundle, new_data) {     library(bundle)          model_object <- unbundle(model_bundle)       predict(model_object, new_data)   },   args = list(     model_bundle = keras_bundle,     new_data = x_test   ) ) #>            [,1] #> [1,]  1.5096883 #> [2,]  1.5982280 #> [3,]  1.0843080 #> [4,]  0.5545344 #> [5,] -0.5893033 #> [6,] -1.5952129 #> [7,]  0.9550182 xgb_fit <-    xgboost(     data = x_train,      label = y_train,     nrounds = 5   ) #> [1]  train-rmse:0.875983  #> [2]  train-rmse:0.672900  #> [3]  train-rmse:0.527715  #> [4]  train-rmse:0.417273  #> [5]  train-rmse:0.334283 xgb_bundle <- bundle(xgb_fit) r(   function(model_bundle, new_data) {     library(bundle)          model_object <- unbundle(model_bundle)          predict(model_object, new_data)   },   args = list(     model_bundle = xgb_bundle,     new_data = x_test   ) ) #> [1]  1.60800147  0.46607706  0.29694021 -0.05833863  0.24531488 #> [6] -0.76071244  0.29694021"},{"path":"https://rstudio.github.io/bundle/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julia Silge. Author, maintainer. Simon Couch. Author. Qiushi Yan. Author. Max Kuhn. Author. . Copyright holder, funder.","code":""},{"path":"https://rstudio.github.io/bundle/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silge J, Couch S, Yan Q, Kuhn M (2022). bundle: Serialize Objects Consistent Interface. https://github.com/rstudio/bundle, https://rstudio.github.io/bundle/.","code":"@Manual{,   title = {bundle: Serialize Objects With A Consistent Interface},   author = {Julia Silge and Simon Couch and Qiushi Yan and Max Kuhn},   year = {2022},   note = {https://github.com/rstudio/bundle, https://rstudio.github.io/bundle/}, }"},{"path":"https://rstudio.github.io/bundle/index.html","id":"bundle","dir":"","previous_headings":"","what":"Serialize Objects With A Consistent Interface","title":"Serialize Objects With A Consistent Interface","text":"NOTE: package early development yet minimally functional. R holds objects memory. However, models store data locations included one uses save() saveRDS(). bundle provides common API capture information, situate within portable object, restore use new settings.","code":""},{"path":"https://rstudio.github.io/bundle/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Serialize Objects With A Consistent Interface","text":"can install development version bundle like :","code":"pak::pak(\"simonpcouch/bundle\")"},{"path":"https://rstudio.github.io/bundle/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Serialize Objects With A Consistent Interface","text":"often imagine trained model somewhat “standalone” R object—given new data, object can generate predictions :  reality, model objects also make use references generate predictions. reference piece data model object refers isn’t part object —anything connection server internal function package used train model. hood, call predict(), model objects know look retrieve data:  Saving model objects can sometimes disrupt references. Thus, want train model, save , re-load production setting, generate predictions , may run issues:  thus need way preserve access references. package provides consistent interface bundling model objects references can safely saved re-loaded production:  , ’re ready save model, bundle() first, ’ve loaded new setting, unbundle() . ’s simple!","code":""},{"path":"https://rstudio.github.io/bundle/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Serialize Objects With A Consistent Interface","text":"bundle prepares model objects can effectively saved re-loaded use new R sessions. demonstrate using bundle, train boosted tree model, bundle , pass bundle another R session generate predictions new data. First, loading needed packages: Fitting boosted tree model: Note simply saving loading model results changes fitted model: Saving reloading mod2 didn’t preserve xgboost’s reference pointer, may result failures later modeling process. thus need prepare fitted model saved passing another R session. can bundling : Passing model another R session generating predictions new data: -depth demonstration package, see main vignette :","code":"library(bundle) library(parsnip) library(callr) library(waldo) # fit an boosted tree with xgboost via parsnip mod <-     boost_tree(trees = 5, mtry = 3) %>%     set_mode(\"regression\") %>%     set_engine(\"xgboost\") %>%     fit(mpg ~ ., data = mtcars[1:25,])  mod #> parsnip model object #>  #> ##### xgb.Booster #> raw: 8.1 Kb  #> call: #>   xgboost::xgb.train(params = list(eta = 0.3, max_depth = 6, gamma = 0,  #>     colsample_bytree = 1, colsample_bynode = 0.3, min_child_weight = 1,  #>     subsample = 1, objective = \"reg:squarederror\"), data = x$data,  #>     nrounds = 5, watchlist = x$watchlist, verbose = 0, nthread = 1) #> params (as set within xgb.train): #>   eta = \"0.3\", max_depth = \"6\", gamma = \"0\", colsample_bytree = \"1\", colsample_bynode = \"0.3\", min_child_weight = \"1\", subsample = \"1\", objective = \"reg:squarederror\", nthread = \"1\", validate_parameters = \"TRUE\" #> xgb.attributes: #>   niter #> callbacks: #>   cb.evaluation.log() #> # of features: 10  #> niter: 5 #> nfeatures : 10  #> evaluation_log: #>  iter training_rmse #>     1     14.631798 #>     2     10.905053 #>     3      8.219282 #>     4      6.258573 #>     5      4.764464 temp_file <- tempfile() saveRDS(mod, temp_file) mod2 <- readRDS(temp_file)  compare(mod, mod2) #> `old$fit$handle` is <pointer: 0x132393ef0> #> `new$fit$handle` is <pointer: 0x0> #>  #> `old$fit$handle` is attr(,\"class\") #> `new$fit$handle` is attr(,\"class\") #>  #> `old$fit$handle` is [1] \"xgb.Booster.handle\" #> `new$fit$handle` is [1] \"xgb.Booster.handle\" #>  #> `parent.env(parent.env(attr(old$preproc$terms, '.Environment')))` is length 5 #> `parent.env(parent.env(attr(new$preproc$terms, '.Environment')))` is length 4 #>  #> names(parent.env(parent.env(attr(old$preproc$terms, '.Environment')))) vs names(parent.env(parent.env(attr(new$preproc$terms, '.Environment')))) #>   \"...\" #>   \"mod\" #> - \"mod2\" #>   \"should_eval\" #>   \"temp_file\" #>  #> `parent.env(parent.env(attr(old$preproc$terms, '.Environment')))$mod$fit$handle` is <pointer: 0x132393ef0> #> `parent.env(parent.env(attr(new$preproc$terms, '.Environment')))$mod$fit$handle` is <pointer: 0x0> #>  #> `parent.env(parent.env(attr(old$preproc$terms, '.Environment')))$mod$fit$handle` is attr(,\"class\") #> `parent.env(parent.env(attr(new$preproc$terms, '.Environment')))$mod$fit$handle` is attr(,\"class\") #>  #> `parent.env(parent.env(attr(old$preproc$terms, '.Environment')))$mod$fit$handle` is [1] \"xgb.Booster.handle\" #> `parent.env(parent.env(attr(new$preproc$terms, '.Environment')))$mod$fit$handle` is [1] \"xgb.Booster.handle\" #>  #> `parent.env(parent.env(attr(old$preproc$terms, '.Environment')))$mod2` is an S3 object of class <_xgb.Booster/model_fit>, a list #> `parent.env(parent.env(attr(new$preproc$terms, '.Environment')))$mod2` is absent # bundle the model bundled_mod <-   bundle(mod)  bundled_mod #> bundled model_fit object. # load the model in a fresh R session and predict on new data r(   func = function(bundled_mod) {     library(bundle)     library(parsnip)          unbundled_mod <-        unbundle(bundled_mod)      predict(unbundled_mod, new_data = mtcars[26:32,])   },   args = list(     bundled_mod = bundled_mod   ) ) #> # A tibble: 7 × 1 #>   .pred #>   <dbl> #> 1  22.2 #> 2  22.2 #> 3  22.2 #> 4  15.1 #> 5  16.2 #> 6  12.6 #> 7  18.8 vignette(\"bundle\")"},{"path":"https://rstudio.github.io/bundle/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Serialize Objects With A Consistent Interface","text":"Please note bundle project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundling — bundle","title":"Bundling — bundle","text":"bundle() methods provide consistent interface serialization methods statistical model objects. outputted bundle can saved, re-loaded new R session, unbundle()d new R session use prediction.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundling — bundle","text":"","code":"bundle(x, ...)  unbundle(x)"},{"path":"https://rstudio.github.io/bundle/reference/bundle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundling — bundle","text":"x model object bundle. ... Additional arguments bundle methods.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundling — bundle","text":"bundle object subclass referencing modeling function. bundle method defined supplied object, bundle.default identity function. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a caret train object — bundle.train","title":"Bundle a caret train object — bundle.train","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a caret train object — bundle.train","text":"","code":"# S3 method for train bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a caret train object — bundle.train","text":"x train object returned caret::train(). ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a caret train object — bundle.train","text":"bundle object subclass bundled_train. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle a caret train object — bundle.train","text":"Primarily, methods call bundle() output train_model_object$finalModel. See class output slot details bundling method object.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":"bundle-and-butcher","dir":"Reference","previous_headings":"","what":"bundle and butcher","title":"Bundle a caret train object — bundle.train","text":"butcher package allows remove parts fitted model object needed prediction. bundle method compatible pre-butchering. , fitted model x, can safely call:   predict output unbundle(res) new R session.","code":"res <-   x %>%   butcher() %>%   bundle()"},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_caret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle a caret train object — bundle.train","text":"","code":"# fit model and bundle ------------------------------------------------ library(caret) #> Loading required package: ggplot2 #> Loading required package: lattice  predictors <- mtcars[, c(\"cyl\", \"disp\", \"hp\")]  set.seed(1)  mod <-   train(     x = predictors,     y = mtcars$mpg,     method = \"glm\"   )  mod_bundle <- bundle(mod)  # then, after saveRDS + readRDS or passing to a new session ---------- mod_unbundled <- unbundle(mod_bundle)  mod_unbundled_preds <- predict(mod_unbundled, new_data = mtcars)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_description.html","id":null,"dir":"Reference","previous_headings":"","what":"bundle: Serialize Objects With A Consistent Interface — bundle_description","title":"bundle: Serialize Objects With A Consistent Interface — bundle_description","text":"R holds objects memory. However, models store data locations included one uses `save()` `saveRDS()`. bundle provides common API capture information, situate within portable object, restore use new settings.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_description.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bundle: Serialize Objects With A Consistent Interface — bundle_description","text":"Maintainer: Julia Silge julia.silge@rstudio.com (ORCID) Authors: Simon Couch simonpatrickcouch@gmail.com Qiushi Yan qiushi.yann@gmail.com Max Kuhn max@rstudio.com contributors: RStudio [copyright holder, funder]","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a step_umap object — bundle.step_umap","title":"Bundle a step_umap object — bundle.step_umap","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_embed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a step_umap object — bundle.step_umap","text":"","code":"# S3 method for step_umap bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a step_umap object — bundle.step_umap","text":"x step_umap object returned embed. ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a step_umap object — bundle.step_umap","text":"bundle object subclass bundled_step_umap. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_embed.html","id":"bundle-and-butcher","dir":"Reference","previous_headings":"","what":"bundle and butcher","title":"Bundle a step_umap object — bundle.step_umap","text":"butcher package allows remove parts fitted model object needed prediction. bundle method compatible pre-butchering. , fitted model x, can safely call:   predict output unbundle(res) new R session.","code":"res <-   x %>%   butcher() %>%   bundle()"},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_embed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle a step_umap object — bundle.step_umap","text":"","code":"# fit model and bundle ------------------------------------------------ library(recipes) #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #>  #> Attaching package: ‘recipes’ #> The following object is masked from ‘package:stats’: #>  #>     step library(embed)  set.seed(1)  rec <- recipe(Species ~ ., data = iris) %>%   step_normalize(all_predictors()) %>%   step_umap(all_predictors(), outcome = vars(Species), num_comp = 2) %>%   prep()  rec_bundle <- bundle(rec)  # then, after saveRDS + readRDS or passing to a new session ---------- rec_unbundled <- unbundle(rec_bundle)  bake(rec_unbundled, new_data = iris) #> # A tibble: 150 × 3 #>    Species UMAP1  UMAP2 #>    <fct>   <dbl>  <dbl> #>  1 setosa   9.02 -0.987 #>  2 setosa   8.91  1.99  #>  3 setosa   9.43  1.34  #>  4 setosa   9.75  1.72  #>  5 setosa   9.11 -1.29  #>  6 setosa   9.95 -2.12  #>  7 setosa   9.44  0.181 #>  8 setosa   9.78 -0.249 #>  9 setosa   9.56  2.35  #> 10 setosa   8.86  1.57  #> # … with 140 more rows #> # ℹ Use `print(n = ...)` to see more rows"},{"path":"https://rstudio.github.io/bundle/reference/bundle_h2o.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle an h2o object — bundle.H2OAutoML","title":"Bundle an h2o object — bundle.H2OAutoML","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_h2o.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle an h2o object — bundle.H2OAutoML","text":"","code":"# S3 method for H2OAutoML bundle(x, id = NULL, n = NULL, ...)  # S3 method for H2OMultinomialModel bundle(x, ...)  # S3 method for H2OBinomialModel bundle(x, ...)  # S3 method for H2ORegressionModel bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_h2o.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle an h2o object — bundle.H2OAutoML","text":"x object returned modeling functions h2o package. id single character. model_id entry leaderboard. Applies AutoML output . Supply one argument n. n integer giving position leaderboard model bundle. Applies AutoML output . ignored id supplied. ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_h2o.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle an h2o object — bundle.H2OAutoML","text":"bundle object subclass bundled_h2o. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_h2o.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle an h2o object — bundle.H2OAutoML","text":"","code":"# fit model and bundle ------------------------------------------------ library(h2o) #>  #> ---------------------------------------------------------------------- #>  #> Your next step is to start H2O: #>     > h2o.init() #>  #> For H2O package documentation, ask for help: #>     > ??h2o #>  #> After starting H2O, you can use the Web UI at http://localhost:54321 #> For more information visit https://docs.h2o.ai #>  #> ---------------------------------------------------------------------- #>  #> Attaching package: ‘h2o’ #> The following objects are masked from ‘package:stats’: #>  #>     cor, sd, var #> The following objects are masked from ‘package:base’: #>  #>     %*%, %in%, &&, apply, as.factor, as.numeric, colnames, #>     colnames<-, ifelse, is.character, is.factor, is.numeric, log, #>     log10, log1p, log2, round, signif, trunc, ||  set.seed(1)  h2o.init() #>  #> H2O is not running yet, starting it now... #>  #> Note:  In case of errors look at the following log files: #>     /tmp/RtmpYWR53m/file399c5a085c9c/h2o_runner_started_from_r.out #>     /tmp/RtmpYWR53m/file399c2edcd856/h2o_runner_started_from_r.err #>  #>  #> Starting H2O JVM and connecting: ...... Connection successful! #>  #> R is connected to the H2O cluster:  #>     H2O cluster uptime:         2 seconds 447 milliseconds  #>     H2O cluster timezone:       UTC  #>     H2O data parsing timezone:  UTC  #>     H2O cluster version:        3.36.1.2  #>     H2O cluster version age:    2 months and 20 days   #>     H2O cluster name:           H2O_started_from_R_runner_ydg016  #>     H2O cluster total nodes:    1  #>     H2O cluster total memory:   1.70 GB  #>     H2O cluster total cores:    2  #>     H2O cluster allowed cores:  2  #>     H2O cluster healthy:        TRUE  #>     H2O Connection ip:          localhost  #>     H2O Connection port:        54321  #>     H2O Connection proxy:       NA  #>     H2O Internal Security:      FALSE  #>     R Version:                  R version 4.2.1 (2022-06-23)  #>   cars_h2o <- as.h2o(mtcars) #>    |                                                                         |                                                                |   0%   |                                                                         |================================================================| 100%  cars_fit <-   h2o.glm(     x = colnames(cars_h2o)[2:11],     y = colnames(cars_h2o)[1],     training_frame = cars_h2o   ) #>    |                                                                         |                                                                |   0%   |                                                                         |================================================================| 100%  cars_bundle <- bundle(cars_fit)  # then, after saveRDS + readRDS or passing to a new session ---------- cars_unbundled <- unbundle(cars_fit)  predict(cars_unbundled, cars_h2o[, 2:11]) #>    |                                                                         |                                                                |   0%   |                                                                         |================================================================| 100% #>    predict #> 1 21.94826 #> 2 21.64605 #> 3 25.34547 #> 4 20.44883 #> 5 17.04492 #> 6 20.12585 #>  #> [32 rows x 1 column]   h2o.shutdown() #> Are you sure you want to shutdown the H2O instance running at http://localhost:54321/ (Y/N)?"},{"path":"https://rstudio.github.io/bundle/reference/bundle_keras.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a keras object — bundle.keras.engine.training.Model","title":"Bundle a keras object — bundle.keras.engine.training.Model","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_keras.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a keras object — bundle.keras.engine.training.Model","text":"","code":"# S3 method for keras.engine.training.Model bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_keras.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a keras object — bundle.keras.engine.training.Model","text":"x object returned modeling functions keras package. ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_keras.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a keras object — bundle.keras.engine.training.Model","text":"bundle object subclass bundled_keras. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_keras.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle a keras object — bundle.keras.engine.training.Model","text":"bundler currently support custom keras extensions, use keras::new_layer_class() custom metric function. situations, consider using keras::with_custom_object_scope().","code":""},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_keras.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle a keras object — bundle.keras.engine.training.Model","text":"","code":"if (FALSE) { # fit model and bundle ------------------------------------------------ library(keras)  set.seed(1)  mnist <- dataset_mnist() x_train <- mnist$train$x y_train <- mnist$train$y x_test <- mnist$test$x y_test <- mnist$test$y  x_train <- array_reshape(x_train, c(nrow(x_train), 784)) x_test <- array_reshape(x_test, c(nrow(x_test), 784))  x_train <- x_train / 255 x_test <- x_test / 255  y_train <- to_categorical(y_train, 10) y_test <- to_categorical(y_test, 10)  mod <- keras_model_sequential()  mod %>%   layer_dense(units = 128, activation = 'relu', input_shape = c(784)) %>%   layer_dropout(rate = 0.4) %>%   layer_dense(units = 64, activation = 'relu') %>%   layer_dropout(rate = 0.3) %>%   layer_dense(units = 10, activation = 'softmax')  mod %>% compile(   loss = 'categorical_crossentropy',   optimizer = optimizer_rmsprop(),   metrics = c('accuracy') )  mod %>% fit(   x_train, y_train,   epochs = 5, batch_size = 128,   validation_split = 0.2,   verbose = 0 )  mod_bundle <- bundle(mod)  # then, after saveRDS + readRDS or passing to a new session ---------- mod_unbundled <- unbundle(mod_bundle)  predict(mod_unbundled, x_test) }"},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a parsnip model_fit object — bundle.model_fit","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"","code":"# S3 method for model_fit bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"x model_fit object returned parsnip tidymodels packages. ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"bundle object subclass bundled_model_fit. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"Primarily, methods call bundle() output parsnip::extract_fit_engine(). See class output function details bundling method object.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":"bundle-and-butcher","dir":"Reference","previous_headings":"","what":"bundle and butcher","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"butcher package allows remove parts fitted model object needed prediction. bundle method compatible pre-butchering. , fitted model x, can safely call:   predict output unbundle(res) new R session.","code":"res <-   x %>%   butcher() %>%   bundle()"},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_parsnip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle a parsnip model_fit object — bundle.model_fit","text":"","code":"# fit model and bundle ------------------------------------------------ library(parsnip) library(xgboost) #>  #> Attaching package: ‘xgboost’ #> The following object is masked from ‘package:dplyr’: #>  #>     slice  set.seed(1)  mod <-   boost_tree(trees = 5, mtry = 3) %>%   set_mode(\"regression\") %>%   set_engine(\"xgboost\") %>%   fit(mpg ~ ., data = mtcars)  mod_bundle <- bundle(mod)  # then, after saveRDS + readRDS or passing to a new session ---------- mod_unbundled <- unbundle(mod_bundle)  mod_unbundled_preds <- predict(mod_unbundled, new_data = mtcars)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a recipe object — bundle.recipe","title":"Bundle a recipe object — bundle.recipe","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a recipe object — bundle.recipe","text":"","code":"# S3 method for recipe bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a recipe object — bundle.recipe","text":"x recipe object returned recipes. ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a recipe object — bundle.recipe","text":"bundle object subclass bundled_recipe. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_recipe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle a recipe object — bundle.recipe","text":"method call bundle() every step recipe object. See classes individual steps details bundling method object.","code":""},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_torch.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","title":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_torch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","text":"","code":"# S3 method for luz_module_fitted bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_torch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","text":"x luz_module_fitted object returned luz::fit.luz_module_generator(). ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_torch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","text":"bundle object subclass bundled_luz_module_fitted. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_torch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","text":"now, bundling methods torch available via luz package, \"higher level API torch providing abstractions allow much less verbose training loops.\" bundlers rely serialization methods luz torch, described package authors \"experimental\" \"use long term storage.\"","code":""},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_torch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle a luz_module_fitted object — bundle.luz_module_fitted","text":"","code":"if (FALSE) { # fit model and bundle ------------------------------------------------ library(torch) library(torchvision) library(luz)  set.seed(1)  # example adapted from luz pkgdown article \"Autoencoder\" dir <- tempdir()  mnist_dataset2 <- torch::dataset(   inherit = mnist_dataset,   .getitem = function(i) {     output <- super$.getitem(i)     output$y <- output$x     output   } )  train_ds <- mnist_dataset2(   dir,   download = TRUE,   transform = transform_to_tensor )  test_ds <- mnist_dataset2(   dir,   train = FALSE,   transform = transform_to_tensor )  train_dl <- dataloader(train_ds, batch_size = 128, shuffle = TRUE) test_dl <- dataloader(test_ds, batch_size = 128)  net <- nn_module(   \"Net\",   initialize = function() {     self$encoder <- nn_sequential(       nn_conv2d(1, 6, kernel_size=5),       nn_relu(),       nn_conv2d(6, 16, kernel_size=5),       nn_relu()     )     self$decoder <- nn_sequential(       nn_conv_transpose2d(16, 6, kernel_size = 5),       nn_relu(),       nn_conv_transpose2d(6, 1, kernel_size = 5),       nn_sigmoid()     )   },   forward = function(x) {     x %>%       self$encoder() %>%       self$decoder()   },   predict = function(x) {     self$encoder(x) %>%       torch_flatten(start_dim = 2)   } )  mod <- net %>%   setup(     loss = nn_mse_loss(),     optimizer = optim_adam   ) %>%   fit(train_dl, epochs = 1, valid_data = test_dl)  mod_bundle <- bundle(mod)   # then, after saveRDS + readRDS or passing to a new session ---------- mod_unbundled <- unbundle(mod_bundle)  mod_unbundled_preds <- predict(mod_unbundled, test_dl) }"},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle a tidymodels workflow object — bundle.workflow","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"","code":"# S3 method for workflow bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"x workflow object returned workflows tidymodels packages. ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"bundle object subclass bundled_workflow. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"bundler wraps bundle.model_fit() bundle.recipe().","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":"bundle-and-butcher","dir":"Reference","previous_headings":"","what":"bundle and butcher","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"butcher package allows remove parts fitted model object needed prediction. bundle method compatible pre-butchering. , fitted model x, can safely call:   predict output unbundle(res) new R session.","code":"res <-   x %>%   butcher() %>%   bundle()"},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_workflows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle a tidymodels workflow object — bundle.workflow","text":"","code":"# fit model and bundle ------------------------------------------------ library(workflows) library(recipes) library(parsnip) library(xgboost)  set.seed(1)  spec <-   boost_tree(trees = 5, mtry = 3) %>%   set_mode(\"regression\") %>%   set_engine(\"xgboost\")  rec <-   recipe(mpg ~ ., data = mtcars) %>%   step_log(hp)  mod <-   workflow() %>%   add_model(spec) %>%   add_recipe(rec) %>%   fit(data = mtcars)  mod_bundle <- bundle(mod)  # then, after saveRDS + readRDS or passing to a new session ---------- mod_unbundled <- unbundle(mod_bundle)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_xgboost.html","id":null,"dir":"Reference","previous_headings":"","what":"Bundle an xgb.Booster object — bundle.xgb.Booster","title":"Bundle an xgb.Booster object — bundle.xgb.Booster","text":"Bundling model prepares saved file later restored prediction new R session. See 'Value' section information bundles usage.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_xgboost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bundle an xgb.Booster object — bundle.xgb.Booster","text":"","code":"# S3 method for xgb.Booster bundle(x, ...)"},{"path":"https://rstudio.github.io/bundle/reference/bundle_xgboost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bundle an xgb.Booster object — bundle.xgb.Booster","text":"x xgb.Booster object returned xgboost::xgboost() xgboost::xgb.train(). ... used bundler included compatibility generic . Additional arguments passed method return error.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_xgboost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bundle an xgb.Booster object — bundle.xgb.Booster","text":"bundle object subclass bundled_xgb.Booster. Bundles list subclass two components: object R object. Gives output native serialization methods model-supplying package, sometimes additional classes attributes aid portability. often raw object. situate function. situate() function defined bundle() called, though loose analogue unbundle() S3 method object. Since function defined bundle(), access references dependency information can saved alongside object component. Calling unbundle() bundled object x calls x$situate(x$object), returning unserialized version object. situate() also restore needed references, server instances environmental variables. Bundles R objects represent \"standalone\" version analogous model object. Thus, bundles ready saving file---saving base::saveRDS() recommended serialization strategy bundles, unless documented otherwise specific method. restore inputted model object x new environment, load bundle base::readRDS() run unbundle() . output unbundle() model object ready predict() new data, restored functionality (like plotting summarizing) supported side effect . See vignette(\"bundle\") information bundling motivation.","code":""},{"path":"https://rstudio.github.io/bundle/reference/bundle_xgboost.html","id":"bundle-and-butcher","dir":"Reference","previous_headings":"","what":"bundle and butcher","title":"Bundle an xgb.Booster object — bundle.xgb.Booster","text":"butcher package allows remove parts fitted model object needed prediction. bundle method compatible pre-butchering. , fitted model x, can safely call:   predict output unbundle(res) new R session.","code":"res <-   x %>%   butcher() %>%   bundle()"},{"path":[]},{"path":"https://rstudio.github.io/bundle/reference/bundle_xgboost.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bundle an xgb.Booster object — bundle.xgb.Booster","text":"","code":"# fit model and bundle ------------------------------------------------ library(xgboost)  set.seed(1)  data(agaricus.train) data(agaricus.test)  xgb <- xgboost(data = agaricus.train$data, label = agaricus.train$label,                max_depth = 2, eta = 1, nthread = 2, nrounds = 2,                objective = \"binary:logistic\") #> [1]\ttrain-logloss:0.233376  #> [2]\ttrain-logloss:0.136658   xgb_bundle <- bundle(xgb)  # then, after saveRDS + readRDS or passing to a new session ---------- xgb_unbundled <- unbundle(xgb_bundle)  xgb_unbundled_preds <- predict(xgb_unbundled, agaricus.test$data)"},{"path":"https://rstudio.github.io/bundle/reference/internal_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal Functions — bundle_constr","title":"Internal Functions — bundle_constr","text":"functions user-facing exported developer extensions.","code":""},{"path":"https://rstudio.github.io/bundle/reference/internal_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal Functions — bundle_constr","text":"","code":"bundle_constr(object, situate, desc_class, pkg_versions)  situate_constr(fn)  swap_element(x, ...)"}]
